name: BUILD IMAGE DOCKER
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main
jobs:
  sonar-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto' # Alternative distribution options are available.

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Build Spring Boot application
        run: ./gradlew clean build -x test

      - name: jacoco
        run: ./gradlew clean test jacocoTestReport

      - name: SonarCloud Scan
        run: |
            ./gradlew sonar \
                -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
                -Dsonar.organization=${{ secrets.SONAR_ORG }} \
                -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
                -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
                -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
      - name: Wait for Quality Gate result
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          organization: ${{ secrets.SONAR_ORG }}
          sonarToken: ${{ secrets.SONAR_TOKEN }}

      - name: Show SonarQube Quality Gate Status value
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  build-and-push:
    runs-on: ubuntu-latest
    needs: [sonar-analysis]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto' # Alternative distribution options are available.

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Build Spring Boot application
        run: ./gradlew clean build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short commit hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Define Docker image tag
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "IMAGE_TAG=prod-${COMMIT_HASH}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=dev-${COMMIT_HASH}" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/twitter-clone-users-service:${{ env.IMAGE_TAG }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/twitter-clone-users-service:${{ env.IMAGE_TAG }}