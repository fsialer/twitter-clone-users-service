plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version "5.1.0.4882"
	id 'jacoco'
}

group = 'com.fernando.ms.users.app'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jacoco {
	toolVersion = "0.8.10"
}


sonar {
	properties {
		property("sonar.projectKey", "${SONAR_NAME_PROJECT}")
		property("sonar.organization", "${SONAR_ORGANIZATION}")
		property("sonar.host.url", "${SONAR_HOST}")
		property("sonar.login", "${SONAR_KEY}")
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.html"
		property "sonar.exclusions",
				"**/com/fernando/ms/users/app/domain/**, " +
						"**/com/fernando/ms/users/app/infrastructure/adapter/utils/**, " +
						"**/com/fernando/ms/users/app/infrastructure/adapter/input/rest/models/enums/**," +
						"**/com/fernando/ms/users/app/infrastructure/adapter/input/rest/GlobalControllerAdvice.java,"+
						"**/com/fernando/ms/users/app/infrastructure/adapter/input/rest/**,"+
						"**/com/fernando/ms/users/app/infrastructure/adapter/output/persistence/mapper/**,"+
						"**/com/fernando/ms/users/app/infrastructure/adapter/output/persistence/models/**,"+
						"**/com/fernando/ms/users/app/TwitterCloneUsersServiceApplication.java"
	}
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.6.2'
	implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
	compileOnly 'org.projectlombok:lombok'
	//runtimeOnly 'org.postgresql:r2dbc-postgresql'
	implementation 'io.r2dbc:r2dbc-postgresql:0.8.13.RELEASE'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.jacocoTestReport {
	reports {
		xml.required = true  // Necesario para SonarQube
		html.required = true
		csv.required = false
	}
}

tasks.test {
	finalizedBy tasks.jacocoTestReport  // Asegura que el reporte se genere despu√©s de las pruebas
}
